name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches:
    - '*'
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: trialservices
      IMAGE_NAME_ENV: trialservices_env
      PROJECT_ID: voicetotext-379213
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: install  gcloud cli
        uses: google-github-actions/auth@v2
        #uses: google-github-actions/setup-gcloud@v2
        with:
          service_account: 'speechtotext@voicetotext-379213.iam.gserviceaccount.com'
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Build Docker Image
        run: |-
          docker build -t $IMAGE_NAME:latest .
          docker build -t $IMAGE_NAME_ENV:latest .

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
        env:
        # GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          GIT_TAG: v0.1.0
      - name: Push Docker Image to Artifact Registry
        run: |-
          docker image list
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          #gcloud artifacts docker images delete us-docker.pkg.dev/$PROJECT_ID/gcr.io/$IMAGE_NAME_ENV:latest
          #gcloud artifacts docker images list us-docker.pkg.dev/$PROJECT_ID/gcr.io/$IMAGE_NAME_ENV > output.txt 
          #magic___^_^___line\n#grep -q \"\" output.txt\n#if [[ $? -eq 0 ]]; then
          gcloud artifacts docker images delete us-docker.pkg.dev/$PROJECT_ID/gcr.io/$IMAGE_NAME_ENV:latest
          #fi       \n#gcloud artifacts docker images delete LOCATION-docker.pkg.dev/$PROJECT_ID/$IMAGE_NAME_ENV:latest\n
          docker tag $IMAGE_NAME_ENV:latest gcr.io/$PROJECT_ID/$IMAGE_NAME_ENV:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME_ENV:latest 
          ls ./k8s
        # deploy container image to GKE
      #- name: deploy to gke
      #  run: |-
      #    gcloud container clusters get-credentials devcluster --region us-central1
       #   sed -i "s/$PROJECT_ID/$PROJECT_ID/g" ./k8s/deployment.yml
       #   kubectl apply -f ./k8s/deployment.yml




        
       
     
        
    
        
        
      
